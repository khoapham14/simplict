{"version":3,"sources":["Assets/Refresh_icon.png","Components/Statistics/Statistics.js","Components/Scrambler/Scrambler.js","Components/Timer/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Stats","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","record","ao5","ao12","best","worst","session_average","session_mean","full_record","x_axis","avg_of_5","bind","_assertThisInitialized","avg_of_12","stringToInt","clearRecord","getBest","getWorst","getSessionAvg","deleteLastSolve","generateX","_createClass","key","value","window","addEventListener","this","handleSpace","handleWindowSizeChange","prevProps","length","props","setState","getSessionMean","removeEventListener","array","map","Number","labels","i","concat","session","sort","a","b","shift","pop","solves","x","reduce","toFixed","ao50","console","log","document","getElementById","style","display","chartData","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","_jsxs","id","children","_jsx","Button","variant","onClick","toggleDashboard","Row","Col","lg","md","xs","Line","width","height","options","responsive","scales","yAxes","ticks","beginAtZero","React","Component","Scrambler","scramble","time","solve_started","puzzle_type","timer_type","shuffle","removeDuplicates","getRandomInt","refreshScramble","refreshOnSolve","remove4x4Error","get3Scramble","get4Scramble","get5Scramble","getMScramble","clearTimeout","refresh","temporaryValue","randomIndex","scr_array","currentIndex","Math","floor","random","len","arguments","undefined","canDelete","splice","one_apart","isDeletable","consecutive","max","array_1","array_2","array_3","array_4","final_scr","join","array_5","array_6","array_7","array_8","array_9","array_10","m_array_1","m_array_2","m_array_3","m_array_4","m_array_5","setTimeout","type","toggleType","_this2","_Fragment","Dropdown","Toggle","Menu","Item","setTimerType","src","alt","Timer","start","isOn","result","innerWidth","manualInput","startTimer","stopTimer","resetTimer","msToTime","handleHold","windowWidth","e","target","preventDefault","_this3","keyCode","s","pad","n","z","slice","alert","_this4","Date","now","timer","setInterval","exportTime","clearInterval","_this5","onKeyUp","tabIndex","onSubmit","handleInputSubmit","onChange","handleInputChange","ReactTouchEvents","onTap","App","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c33a4feb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Refresh_icon.a86495a5.png\";","import React from 'react';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport { Line } from 'react-chartjs-2';\r\nimport refresh from '../../Assets/Refresh_icon.png';\r\nimport \"./Statistics.css\";\r\n\r\nclass Stats extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      record: [],\r\n      ao5: 0,\r\n      ao12: 0,\r\n      best: 0,\r\n      worst: 0,\r\n      session_average: 0,\r\n      session_mean: 0,\r\n      full_record: [],\r\n      x_axis: [],\r\n    };\r\n\r\n    this.avg_of_5 = this.avg_of_5.bind(this)\r\n    this.avg_of_12 = this.avg_of_12.bind(this)\r\n    this.stringToInt = this.stringToInt.bind(this)\r\n    this.clearRecord = this.clearRecord.bind(this)\r\n    this.getBest = this.getBest.bind(this)\r\n    this.getWorst = this.getWorst.bind(this)\r\n    this.getSessionAvg = this.getSessionAvg.bind(this)\r\n    this.deleteLastSolve = this.deleteLastSolve.bind(this)\r\n    this.generateX = this.generateX.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"spacebar\", this.handleSpace, true);\r\n    window.addEventListener(\"resize\", this.handleWindowSizeChange);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.record.length !== this.props.record.length){\r\n      this.setState({\r\n        ao5: this.avg_of_5(),\r\n        ao12: this.avg_of_12(),\r\n        best: this.getBest(),\r\n        worst: this.getWorst(),\r\n        session_average: this.getSessionAvg(),\r\n        session_mean: this.getSessionMean(),\r\n        x_axis: this.generateX(),\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"spacebar\", this.handleSpace, true);\r\n  }\r\n\r\n\r\n  stringToInt(array) {\r\n    return array.map(Number);\r\n  }\r\n\r\n  generateX() {\r\n    var labels = []\r\n    for (var i = 1; i <= this.props.record.length; i++) {\r\n      labels = labels.concat(i);\r\n    }\r\n\r\n    return labels;\r\n  }\r\n\r\n  getBest() {\r\n    var session = [];\r\n    session = session.concat(this.props.record);\r\n    session.sort(function (a, b) { return a - b });\r\n\r\n    return session.shift();\r\n  }\r\n\r\n  getWorst() {\r\n    var session = [];\r\n    session = session.concat(this.props.record);\r\n    session.sort(function (a, b) { return a - b });\r\n\r\n    return session.pop();\r\n  }\r\n\r\n  avg_of_5() {\r\n    if (this.props.record.length >= 5) {\r\n      var i = this.props.record.length - 1;\r\n      var solves = []\r\n      for (var x = i; (i - x) < 5; x--) {\r\n        solves = solves.concat(this.props.record[x])\r\n      }\r\n\r\n      this.setState({record: solves});\r\n      solves.sort(function (a, b) { return a - b });\r\n      solves.shift();\r\n      solves.pop();\r\n\r\n      return ((this.stringToInt(solves).reduce((a, b) => a + b, 0)) / 3).toFixed(2);\r\n\r\n    }\r\n  }\r\n\r\n  avg_of_12() {\r\n    if (this.props.record.length >= 12) {\r\n      var i = this.props.record.length - 1;\r\n      var solves = []\r\n      for (var x = i; (i - x) < 12; x--) {\r\n        solves = solves.concat(this.props.record[x])\r\n      }\r\n\r\n      this.setState({record: solves});\r\n      solves.sort(function (a, b) { return a - b });\r\n      solves.shift();\r\n      solves.pop();\r\n\r\n      return ((this.stringToInt(solves).reduce((a, b) => a + b, 0)) / 10).toFixed(2)\r\n    }\r\n  }\r\n\r\n \r\n\r\n  getSessionAvg() {\r\n    var session = []\r\n    if (this.props.record.length >= 3) {\r\n      session = session = session.concat(this.props.record);\r\n      session.sort(function (a, b) { return a - b });\r\n\r\n      session.shift();\r\n      session.pop();\r\n\r\n    }\r\n\r\n    return ((this.stringToInt(session).reduce((a, b) => a + b, 0)) / (this.props.record.length - 2)).toFixed(2);\r\n  }\r\n\r\n  getSessionMean() {\r\n    var session = []\r\n    if (this.props.record.length > 0) {\r\n      session = session = session.concat(this.props.record);\r\n      session.sort(function (a, b) { return a - b });\r\n    }\r\n\r\n    return ((this.stringToInt(session).reduce((a, b) => a + b, 0)) / this.props.record.length).toFixed(2);\r\n  }\r\n\r\n  clearRecord() {\r\n    this.props.clearRecord();\r\n    this.setState({\r\n      ao5: \"\",\r\n      ao12: \"\",\r\n      ao50: \"\",\r\n      best: \"\",\r\n      worst: \"\",\r\n      record: \"\",\r\n    })\r\n  }\r\n\r\n  deleteLastSolve() {\r\n    console.log(\"Delete last solve called\");\r\n    this.props.record.pop();\r\n    this.setState({ record: this.props.record})\r\n  }\r\n\r\n  toggleDashboard() {\r\n    var x = document.getElementById(\"dashboard\");\r\n    if (x.style.display === \"none\") {\r\n      x.style.display = \"flex\";\r\n    } else {\r\n      x.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const chartOptions={\r\n      // maintainAspectRatio: true,\r\n      responsive: true,\r\n      height: \"10rem\",\r\n      scales: {\r\n        yAxes: [{\r\n          ticks: {\r\n            beginAtZero: true\r\n          }\r\n        }]\r\n      }\r\n    }\r\n\r\n    const chartData = {\r\n      labels: this.state.x_axis,\r\n      datasets: [\r\n        {\r\n          label: 'Solve Times',\r\n          fill: false,\r\n          lineTension: 0.5,\r\n          backgroundColor: '#FFFFFF',\r\n          borderColor: '#483d8b',\r\n          borderWidth: 1,\r\n          data: this.props.record\r\n        }\r\n      ]\r\n    }\r\n      return (\r\n        <div id=\"stats\">\r\n          <div id=\"avg-container\">\r\n            <p id=\"avg-text\"> Average of 5: {this.state.ao5} </p>\r\n            <p id=\"avg-text\"> Average of 12: {this.state.ao12}</p>\r\n          </div>\r\n          <Button variant=\"outline-dark\" id=\"toggle-button\" onClick={this.toggleDashboard}>Dashboard</Button>\r\n          <Row id=\"dashboard\">\r\n            <Col lg={2} md={12} xs={12} id=\"stats_section\">\r\n              <Row>\r\n                <Col lg={12} md={12} xs={12}>\r\n                  <p id=\"dashboard_header\">Session Summary</p>\r\n                  <div id=\"main_stats\">\r\n                    <div> <strong>Session Best:</strong> {this.state.best} </div>\r\n                    <div> <strong>Session Worst:</strong> {this.state.worst} </div>\r\n                    <div> <strong>Session Average:</strong>  {this.state.session_average}</div>\r\n                    <div> <strong>Session Mean</strong> {this.state.session_mean} </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col lg={5} md={12} xs={12} id=\"data_section\">\r\n              <Row>\r\n                <Col lg={4} md={12} xs={12}>\r\n                  <p id=\"dashboard_header\">Session Data</p>\r\n                  <p id=\"main_stats\">All individual times recorded for this session.</p>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.deleteLastSolve}> Delete Last </Button>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.clearRecord}>Reset</Button>\r\n                </Col>\r\n                <Col lg={8} md={12} xs={12} id=\"recorded_times\">\r\n                  {this.props.record}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col lg={5} md={12} xs={12} id=\"chart_section\">\r\n              <Row>\r\n                <Col lg={4} md={12} xs={12}>\r\n                <p id=\"dashboard_header\">Session Chart</p>\r\n                <p id=\"main_stats\">Recorded times plotted on a chart for easier visualization.</p>\r\n                </Col>\r\n                <Col lg={8} md={12} xs={12}>\r\n                  <Line data={chartData}\r\n                  width={5}\r\n                  height={2}\r\n                  options={chartOptions}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Stats;","import React from 'react';\r\nimport refresh from '../../Assets/Refresh_icon.png';\r\nimport \"./Scrambler.css\";\r\nimport { Dropdown, Row } from 'react-bootstrap';\r\n\r\n\r\nclass Scrambler extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      scramble: '',\r\n      time: '',\r\n      solve_started: false,\r\n      puzzle_type: '3x3',\r\n      timer_type: 'Timer',\r\n    };\r\n\r\n    this.shuffle = this.shuffle.bind(this)\r\n    this.scramble = this.scramble.bind(this)\r\n    this.removeDuplicates = this.removeDuplicates.bind(this)\r\n    this.getRandomInt = this.getRandomInt.bind(this)\r\n    this.refreshScramble = this.refreshScramble.bind(this)\r\n    this.refreshOnSolve = this.refreshOnSolve.bind(this)\r\n    this.remove4x4Error = this.remove4x4Error.bind(this)\r\n    this.get3Scramble = this.get3Scramble.bind(this)\r\n    this.get4Scramble = this.get4Scramble.bind(this)\r\n    this.get5Scramble = this.get5Scramble.bind(this)\r\n    this.getMScramble = this.getMScramble.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Generates an initial scramble\r\n    this.scramble();\r\n    window.addEventListener(\"refresh_scr\", this.refreshOnSolve, true)\r\n    window.addEventListener(\"resize\", this.handleWindowSizeChange, true)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.refreshScramble);\r\n    window.removeEventListener(\"refresh_scr\", this.refreshOnSolve, true)\r\n  }\r\n\r\n  refreshOnSolve() {\r\n    if (this.props.refresh === true) {\r\n      this.refreshScramble();\r\n    }\r\n  }\r\n\r\n  get3Scramble() {\r\n    this.setState({ puzzle_type: \"3x3\" })\r\n    this.refreshScramble();\r\n  }\r\n\r\n  get4Scramble() {\r\n    this.setState({ puzzle_type: \"4x4\" })\r\n    this.refreshScramble();\r\n  }\r\n\r\n  get5Scramble() {\r\n    this.setState({ puzzle_type: \"5x5\" })\r\n    this.refreshScramble();\r\n  }\r\n\r\n  getMScramble() {\r\n    this.setState({ puzzle_type: \"Mega\" })\r\n    this.refreshScramble();\r\n  }\r\n\r\n  // Creates an array of sides and shuffles the element randomly\r\n  shuffle() {\r\n    var scr_array = [\"R\", \"U\", \"D\", \"L\", \"F\", \"B\"];\r\n    var currentIndex = scr_array.length, temporaryValue, randomIndex;\r\n\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      temporaryValue = scr_array[currentIndex];\r\n      scr_array[currentIndex] = scr_array[randomIndex];\r\n      scr_array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return scr_array;\r\n  }\r\n\r\n  // Removes 4x4 opposing layers turn from an array to prevent redundant moves\r\n  removeDuplicates(array, len = 0, canDelete = false) {\r\n    if (len < array.length) {\r\n      if (canDelete) {   // If element is the same as the next one, deletes 1 and go back 1 step. \r\n        array.splice(len, 1);\r\n        len = len - 2;\r\n      }\r\n\r\n      var consecutive = (array[len] === array[len + 1])\r\n      var one_apart;\r\n\r\n      switch (array[len]) {\r\n        case \"F\":\r\n          if (array[len + 1] === \"B\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n        case \"B\":\r\n          if (array[len + 1] === \"F\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n\r\n        case \"L\":\r\n          if (array[len + 1] === \"R\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n        case \"R\":\r\n          if (array[len + 1] === \"L\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n        case \"U\":\r\n          if (array[len + 1] === \"D\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n\r\n        case \"D\":\r\n          if (array[len + 1] === \"U\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n        default:\r\n          one_apart = false;\r\n          break;\r\n      }\r\n\r\n      var isDeletable;\r\n\r\n      if (consecutive || one_apart) {\r\n        isDeletable = true;\r\n      } else {\r\n        isDeletable = false;\r\n      }\r\n\r\n      return this.removeDuplicates(array, len + 1, isDeletable)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  remove4x4Error(array, len = 0, canDelete = false) {\r\n    if (len < array.length) {\r\n      if (canDelete) {\r\n        array.splice(len, 1);\r\n        len--;\r\n      }\r\n\r\n      var isDeletable;\r\n\r\n      switch (array[len]) {\r\n        case \"F\":\r\n          if (array[len + 1] === \"B\" || array[len - 1] === \"B\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"B\":\r\n          if (array[len + 1] === \"F\" || array[len - 1] === \"F\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"R\":\r\n          if (array[len + 1] === \"L\" || array[len - 1] === \"L\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"L\":\r\n          if (array[len + 1] === \"R\" || array[len - 1] === \"R\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"U\":\r\n          if (array[len + 1] === \"D\" || array[len - 1] === \"D\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"D\":\r\n          if (array[len + 1] === \"U\" || array[len - 1] === \"U\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n\r\n        default:\r\n          isDeletable = false;\r\n          break;\r\n      }\r\n\r\n      return this.remove4x4Error(array, len + 1, isDeletable)\r\n    }\r\n\r\n  }\r\n\r\n  // Generates a random number from a range indicated by max.\r\n  getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  }\r\n\r\n  // Generate a scramble based on selected puzzle type\r\n  scramble() {\r\n    switch (this.state.puzzle_type) {\r\n      case \"3x3\":\r\n        var array_1 = this.shuffle();\r\n        var array_2 = this.shuffle();\r\n        var array_3 = this.shuffle();\r\n        var array_4 = this.shuffle();\r\n\r\n        var final_scr = array_1.concat(array_2, array_3, array_4);\r\n\r\n        this.removeDuplicates(final_scr);\r\n\r\n        var i;\r\n\r\n        // Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n          switch (final_scr[i]) {\r\n            case \"R\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"R\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"R'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"R2\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"L\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"L\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"L'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"L2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"U\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"U\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"U'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"U2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"D\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"D\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"D'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"D2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"F\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"F\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"F'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"F2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"B\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"B\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"B'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"B2\"\r\n                  break;\r\n              }\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n        break;\r\n\r\n\r\n      case \"4x4\":\r\n        array_1 = this.shuffle();\r\n        array_2 = this.shuffle();\r\n        array_3 = this.shuffle();\r\n        array_4 = this.shuffle();\r\n        var array_5 = this.shuffle();\r\n        var array_6 = this.shuffle();\r\n        var array_7 = this.shuffle();\r\n        var array_8 = this.shuffle();\r\n\r\n        final_scr = array_1.concat(array_2, array_3, array_4, array_5, array_6, array_7, array_8);\r\n\r\n\r\n        this.removeDuplicates(final_scr);\r\n        this.remove4x4Error(final_scr);\r\n\r\n\r\n        //Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n          switch (final_scr[i]) {\r\n            case \"R\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"R\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"R'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"R2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Rw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Rw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Rw2\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"L\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"L\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"L'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"L2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Lw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Lw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Lw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"U\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"U\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"U'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"U2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Uw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Uw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Uw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"D\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"D\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"D'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"D2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Dw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Dw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Dw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"F\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"F\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"F'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"F2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Fw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Fw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Fw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"B\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"B\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"B'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"B2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Bw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Bw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Bw2\"\r\n                  break;\r\n              }\r\n\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n        break;\r\n\r\n      case \"5x5\":\r\n        array_1 = this.shuffle();\r\n        array_2 = this.shuffle();\r\n        array_3 = this.shuffle();\r\n        array_4 = this.shuffle();\r\n        array_5 = this.shuffle();\r\n        array_6 = this.shuffle();\r\n        array_7 = this.shuffle();\r\n        array_8 = this.shuffle();\r\n        var array_9 = this.shuffle();\r\n        var array_10 = this.shuffle();\r\n\r\n        final_scr = array_1.concat(array_2, array_3, array_4, array_5, array_6, array_7, array_8, array_9, array_10);\r\n\r\n\r\n        this.removeDuplicates(final_scr);\r\n\r\n\r\n        //Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n          switch (final_scr[i]) {\r\n            case \"R\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"R\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"R'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"R2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Rw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Rw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Rw2\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"L\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"L\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"L'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"L2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Lw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Lw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Lw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"U\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"U\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"U'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"U2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Uw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Uw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Uw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"D\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"D\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"D'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"D2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Dw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Dw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Dw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"F\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"F\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"F'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"F2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Fw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Fw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Fw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"B\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"B\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"B'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"B2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Bw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Bw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Bw2\"\r\n                  break;\r\n              }\r\n\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n        break;\r\n\r\n      case \"Mega\":\r\n        var m_array_1 = [\"R\", \"D\", \"R\", \"D\", \"R\", \"D\", \"R\", \"D\", \"R\", \"D\", \"U\"]\r\n        var m_array_2 = m_array_1;\r\n        var m_array_3 = m_array_1;\r\n        var m_array_4 = m_array_1;\r\n        var m_array_5 = m_array_1;\r\n\r\n        final_scr = m_array_1.concat(m_array_2, m_array_3, m_array_4, m_array_5);\r\n\r\n\r\n        //Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n          switch (final_scr[i]) {\r\n            case \"R\":\r\n              switch (this.getRandomInt(2)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"R++\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"R--\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"D\":\r\n              switch (this.getRandomInt(2)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"D++\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"D--\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"U\":\r\n              switch (this.getRandomInt(2)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"U\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"U'\"\r\n                  break;\r\n              }\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n        break;\r\n\r\n      default:\r\n        return this.state.scramble;\r\n    }\r\n  }\r\n\r\n\r\n  refreshScramble() {\r\n    setTimeout(this.scramble, 500);\r\n  }\r\n\r\n  setTimerType(type) {\r\n    if (this.state.timer_type !== type) {\r\n      this.setState({ timer_type: type });\r\n      this.props.toggleType();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.width > 767 ?\r\n          <div id=\"scramble-container\">\r\n            <Dropdown id=\"scramble-selector\">\r\n              <Dropdown.Toggle variant=\"outline-light\" id=\"dropdown-text\">\r\n                {this.state.puzzle_type} \r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item id=\"dropdown-text\" onClick={this.get3Scramble}> 3x3 </Dropdown.Item>\r\n                <Dropdown.Item id=\"dropdown-text\" onClick={this.get4Scramble}> 4x4 </Dropdown.Item>\r\n                <Dropdown.Item id=\"dropdown-text\" onClick={this.get5Scramble}> 5x5 </Dropdown.Item>\r\n                <Dropdown.Item id=\"dropdown-text\" onClick={this.getMScramble}> Megaminx </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n\r\n            </Dropdown>\r\n\r\n            <Dropdown id=\"scramble-selector\">\r\n              <Dropdown.Toggle variant=\"outline-light\" id=\"dropdown-text\">\r\n                {this.state.timer_type}\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item id=\"dropdown-text\" onClick={() => this.setTimerType(\"Timer\")}> Timer </Dropdown.Item>\r\n                <Dropdown.Item id=\"dropdown-text\" onClick={() => this.setTimerType(\"Manual\")}> Manual Input </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n\r\n            </Dropdown>\r\n\r\n            <div id=\"scramble\">\r\n              {this.state.scramble}\r\n              {this.refreshOnSolve()}\r\n            </div>\r\n            <div id=\"refresh-icon-container\">\r\n              <img src={refresh} onClick={this.refreshScramble} id=\"refresh_icon\" alt=\"refresh_button\" />\r\n            </div>\r\n          </div>\r\n          :\r\n          <div id=\"scramble-container\">\r\n            <Row>\r\n              <Dropdown id=\"scramble-selector\">\r\n                <Dropdown.Toggle variant=\"outline-light\" id=\"dropdown-text\">\r\n                  {this.state.puzzle_type}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item id=\"dropdown-text\" onClick={this.get3Scramble}> 3x3 </Dropdown.Item>\r\n                  <Dropdown.Item id=\"dropdown-text\" onClick={this.get4Scramble}> 4x4 </Dropdown.Item>\r\n                  <Dropdown.Item id=\"dropdown-text\" onClick={this.get5Scramble}> 5x5 </Dropdown.Item>\r\n                  <Dropdown.Item id=\"dropdown-text\" onClick={this.getMScramble}> Megaminx </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n\r\n              </Dropdown>\r\n\r\n              <Dropdown id=\"scramble-selector\">\r\n                <Dropdown.Toggle variant=\"outline-light\" id=\"dropdown-text\">\r\n                  {this.state.timer_type}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item id=\"dropdown-text\" onClick={() => this.setTimerType(\"Timer\")}> Timer </Dropdown.Item>\r\n                  <Dropdown.Item id=\"dropdown-text\" onClick={() => this.setTimerType(\"Manual\")}> Manual Input </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n\r\n              <div id=\"refresh-icon-container\">\r\n                <img src={refresh} onClick={this.refreshScramble} id=\"refresh_icon\" alt=\"refresh_button\" />\r\n              </div>\r\n            </Row>\r\n\r\n            <Row>\r\n              <p id=\"scramble\">\r\n                {this.state.scramble}\r\n                {this.refreshOnSolve()}\r\n              </p>\r\n            </Row>\r\n          </div>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scrambler;","import React from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport Stats from '../Statistics/Statistics.js';\r\nimport Scrambler from '../Scrambler/Scrambler.js';\r\nimport ReactTouchEvents from 'react-touch-events';\r\nimport \"./Timer.css\";\r\n\r\nclass Timer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      time: 0,\r\n      start: 0,\r\n      isOn: false,\r\n      result: 0,\r\n      record: [],\r\n      refresh: false,\r\n      width: window.innerWidth,\r\n      manualInput: false,\r\n    };\r\n\r\n    this.startTimer = this.startTimer.bind(this)\r\n    this.stopTimer = this.stopTimer.bind(this)\r\n    this.resetTimer = this.resetTimer.bind(this)\r\n    this.handleSpace = this.handleSpace.bind(this)\r\n    this.clearRecord = this.clearRecord.bind(this)\r\n    this.refresh = this.refresh.bind(this)\r\n    this.msToTime = this.msToTime.bind(this)\r\n    this.handleHold = this.handleHold.bind(this)\r\n    this.handleWindowSizeChange = this.handleWindowSizeChange.bind(this)\r\n    this.toggleType = this.toggleType.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleWindowSizeChange,true);\r\n    window.addEventListener(\"spacebar\", this.handleSpace, true);\r\n  }\r\n\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleWindowSizeChange,true);\r\n    window.removeEventListener(\"spacebar\", this.handleSpace, true);\r\n  }\r\n\r\n  handleWindowSizeChange() {\r\n    let windowWidth = window.innerWidth;\r\n    this.setState({ width: windowWidth });\r\n    console.log(this.state.width);\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    this.setState({ time: e.target.value });\r\n  }\r\n\r\n  handleInputSubmit(e) {\r\n    this.setState({ refresh: true }, () => setTimeout(this.refresh, 500));     \r\n    e.preventDefault();\r\n  }\r\n\r\n  handleSpace(e) {\r\n    if(this.state.manualInput){\r\n      return;\r\n    }else{\r\n      // Starts timer when spacebar is pressed.\r\n      if (e.keyCode === 32) {\r\n        if (this.state.time === 0) {\r\n          this.startTimer()\r\n          // console.log(\"starttimer called\");  For debugging\r\n        }\r\n        else {\r\n          // Stops timer, wait 0.5s then export and reset.\r\n          this.stopTimer();\r\n          this.setState({ refresh: true }, () => setTimeout(this.refresh, 500));     \r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleHold(e) {\r\n    if (this.state.time === 0) {\r\n      setTimeout(this.startTimer(), 1000);\r\n    }\r\n    else {\r\n      this.stopTimer();\r\n      this.setState({ refresh: true });\r\n      setTimeout(this.refresh, 500);\r\n    }\r\n  }\r\n\r\n\r\n  // Formatting time to hh:mm:ss.ms format\r\n  msToTime(s) {\r\n    // Pad to 2 or 3 digits, default is 2\r\n    var pad = (n, z = 2) => ('00' + n).slice(-z);\r\n    if (s < 60000) {\r\n      return pad((s % 6e4) / 1000 | 0) + '.' + pad(s % 1000, 2) + \"  \";\r\n    }\r\n    else if (s >= 60000 && s < 3600000) {\r\n      return pad((s % 3.6e6) / 6e4 | 0) + ':' + pad((s % 6e4) / 1000 | 0) + '.' + pad(s % 1000, 2) + \"  \";\r\n    }\r\n    else if (s >= 3600000) {\r\n      return pad(s / 3.6e6 | 0) + ':' + pad((s % 3.6e6) / 6e4 | 0) + ':' + pad((s % 6e4) / 1000 | 0) + '.' + pad(s % 1000, 2) + \"  \";\r\n    }\r\n    else {\r\n      alert(\"Wake up fool! You're taking too long to solve that cube!\");\r\n    }\r\n  }\r\n\r\n  // Function to start timer.\r\n  startTimer() {\r\n    // Starts timing by constantly checking for current time and saving to state.\r\n    this.setState({\r\n      time: this.state.time,\r\n      start: Date.now() - this.state.time,\r\n      isOn: true\r\n    });\r\n\r\n\r\n    this.timer = setInterval(() => this.setState({\r\n      time: this.msToTime(Date.now() - this.state.start)\r\n    }), 1);\r\n\r\n  }\r\n\r\n  // Function to check time passed since finger tap / space pressed.\r\n\r\n  // Refresh and export time.\r\n  refresh() {\r\n    this.setState({ refresh: false });\r\n    this.exportTime();\r\n    this.resetTimer();\r\n  }\r\n\r\n  // Stopping timer.\r\n  stopTimer() {\r\n    this.setState({\r\n      isOn: false,\r\n      refresh: true,\r\n    })\r\n    clearInterval(this.timer)\r\n  }\r\n\r\n  // Resetting timer to 0.\r\n  resetTimer() {\r\n    this.setState({\r\n      time: 0,\r\n      refresh: false\r\n    })\r\n  }\r\n\r\n  // Adding time to this.state.record for exporting to Statistics component\r\n  exportTime() {\r\n    this.setState({ record: this.state.record.concat(this.state.time) });\r\n  }\r\n\r\n  // Clearing all times\r\n  clearRecord() {\r\n    this.setState({ record: [] });\r\n  }\r\n\r\n  toggleType() {\r\n    console.log(\"Toggle Type Called\");\r\n    this.setState({ manualInput: !this.state.manualInput });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.width <= 767) {\r\n      return (\r\n        <div onKeyUp={(e) => this.handleSpace(e)} tabIndex=\"0\" id=\"timer-container\">\r\n\r\n          {/* Passing refresh as prop to Scrambler for scramble sequence to refresh when timer stops. */}\r\n          <Scrambler refresh={this.state.refresh} toggleType={() => this.toggleType()} width={this.state.width} />\r\n\r\n          {this.state.manualInput ? \r\n            <>\r\n              <form onSubmit={(e) => this.handleInputSubmit(e)}>\r\n                <input id=\"manual-input\" type=\"text\" value={this.state.time} onChange={(e) => this.handleInputChange(e)} />\r\n              </form>\r\n            </>\r\n            :\r\n            <ReactTouchEvents onTap={this.handleHold}>\r\n              <p id=\"timer-text\"> {this.state.time} </p>\r\n            </ReactTouchEvents>\r\n          }\r\n\r\n          {/* Passing record & clear record to statistics for processing */}\r\n          <Stats record={this.state.record} clearRecord={this.clearRecord} width={this.state.width}/>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div onKeyUp={(e) => this.handleSpace(e)} tabIndex=\"0\" id=\"timer-container\">\r\n          {/* Passing refresh as prop to Scrambler for scramble sequence to refresh when timer stops. */}\r\n          <Row>\r\n            <Scrambler refresh={this.state.refresh} toggleType={() => this.toggleType()} width={this.state.width}/>\r\n          </Row>\r\n          {this.state.manualInput ?             \r\n            <>\r\n              <form onSubmit={(e) => this.handleInputSubmit(e)}>\r\n                <input id=\"manual-input\" type=\"text\" value={this.state.time} onChange={(e) => this.handleInputChange(e)} />\r\n              </form>\r\n            </> :\r\n            <p id=\"timer-text\"> {this.state.time} </p>\r\n          }\r\n\r\n          {/* Passing record & clear record to statistics for processing */}\r\n          <Stats record={this.state.record} clearRecord={this.clearRecord} width={this.state.width}/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\nimport Timer from './Components/Timer/Timer.js';\r\nimport { Row } from \"react-bootstrap\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <div id=\"simplict\">\r\n      <Row>\r\n        <Timer />\r\n      </Row>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}