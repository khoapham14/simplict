{"version":3,"sources":["Assets/Refresh_icon.png","Components/Statistics/Statistics.js","Components/Scrambler/Scrambler.js","Components/Timer/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Stats","state","record","ao5","ao12","best","worst","session_average","session_mean","full_record","x_axis","width","window","innerWidth","avg_of_5","bind","avg_of_12","stringToInt","clearRecord","getBest","getWorst","getSessionAvg","deleteLastSolve","generateX","handleWindowSizeChange","addEventListener","this","handleSpace","prevProps","length","props","setState","getSessionMean","array","map","Number","labels","i","concat","session","sort","a","b","shift","pop","solves","x","reduce","toFixed","ao50","console","log","graph","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","Fragment","id","Row","Col","md","s","xs","Button","variant","onClick","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","React","Component","Scrambler","scramble","time","solve_started","puzzle_type","timer_type","shuffle","removeDuplicates","getRandomInt","refreshScramble","refreshOnSolve","remove4x4Error","get3Scramble","get4Scramble","get5Scramble","getMScramble","document","clearTimeout","removeEventListener","refresh","temporaryValue","randomIndex","scr_array","currentIndex","Math","floor","random","len","canDelete","splice","one_apart","isDeletable","consecutive","max","array_1","array_2","array_3","array_4","final_scr","join","array_5","array_6","array_7","array_8","array_9","array_10","m_array_1","m_array_2","m_array_3","m_array_4","m_array_5","setTimeout","type","toggleType","Dropdown","Toggle","Menu","Item","setTimerType","src","alt","Timer","start","isOn","result","manualInput","startTimer","stopTimer","resetTimer","msToTime","handleHold","e","target","value","preventDefault","keyCode","pad","n","z","slice","alert","Date","now","timer","setInterval","exportTime","clearInterval","onKeyUp","tabIndex","onSubmit","handleInputSubmit","onChange","handleInputChange","onTap","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.af395847.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Refresh_icon.a86495a5.png\";","import React from 'react';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport { Line } from 'react-chartjs-2';\r\nimport refresh from '../../Assets/Refresh_icon.png';\r\nimport \"./Statistics.css\";\r\n\r\nclass Stats extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      record: [],\r\n      ao5: 0,\r\n      ao12: 0,\r\n      best: 0,\r\n      worst: 0,\r\n      session_average: 0,\r\n      session_mean: 0,\r\n      full_record: [],\r\n      x_axis: [],\r\n      width: window.innerWidth,\r\n    };\r\n\r\n    this.avg_of_5 = this.avg_of_5.bind(this)\r\n    this.avg_of_12 = this.avg_of_12.bind(this)\r\n    this.stringToInt = this.stringToInt.bind(this)\r\n    this.clearRecord = this.clearRecord.bind(this)\r\n    this.getBest = this.getBest.bind(this)\r\n    this.getWorst = this.getWorst.bind(this)\r\n    this.getSessionAvg = this.getSessionAvg.bind(this)\r\n    this.deleteLastSolve = this.deleteLastSolve.bind(this)\r\n    this.generateX = this.generateX.bind(this)\r\n    this.handleWindowSizeChange = this.handleWindowSizeChange.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"spacebar\", this.handleSpace, true);\r\n    window.addEventListener(\"resize\", this.handleWindowSizeChange);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.record.length !== this.props.record.length){\r\n      this.setState({\r\n        ao5: this.avg_of_5(),\r\n        ao12: this.avg_of_12(),\r\n        best: this.getBest(),\r\n        worst: this.getWorst(),\r\n        session_average: this.getSessionAvg(),\r\n        session_mean: this.getSessionMean(),\r\n        x_axis: this.generateX(),\r\n      })\r\n    }\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   window.removeEventListener(\"spacebar\", this.handleSpace, true);\r\n  //   window.removeEventListener(\"resize\", this.handleWindowSizeChange);\r\n  // }\r\n\r\n  handleWindowSizeChange(){\r\n    this.setState({ width: window.innerWidth});\r\n  }\r\n\r\n  stringToInt(array) {\r\n    return array.map(Number);\r\n  }\r\n\r\n  generateX() {\r\n    var labels = []\r\n    for (var i = 1; i <= this.props.record.length; i++) {\r\n      labels = labels.concat(i);\r\n    }\r\n\r\n    return labels;\r\n  }\r\n\r\n  getBest() {\r\n    var session = [];\r\n    session = session.concat(this.props.record);\r\n    session.sort(function (a, b) { return a - b });\r\n\r\n    return session.shift();\r\n  }\r\n\r\n  getWorst() {\r\n    var session = [];\r\n    session = session.concat(this.props.record);\r\n    session.sort(function (a, b) { return a - b });\r\n\r\n    return session.pop();\r\n  }\r\n\r\n  avg_of_5() {\r\n    if (this.props.record.length >= 5) {\r\n      var i = this.props.record.length - 1;\r\n      var solves = []\r\n      for (var x = i; (i - x) < 5; x--) {\r\n        solves = solves.concat(this.props.record[x])\r\n      }\r\n\r\n      this.setState({record: solves});\r\n      solves.sort(function (a, b) { return a - b });\r\n      solves.shift();\r\n      solves.pop();\r\n\r\n      return ((this.stringToInt(solves).reduce((a, b) => a + b, 0)) / 3).toFixed(2);\r\n\r\n    }\r\n  }\r\n\r\n  avg_of_12() {\r\n    if (this.props.record.length >= 12) {\r\n      var i = this.props.record.length - 1;\r\n      var solves = []\r\n      for (var x = i; (i - x) < 12; x--) {\r\n        solves = solves.concat(this.props.record[x])\r\n      }\r\n\r\n      this.setState({record: solves});\r\n      solves.sort(function (a, b) { return a - b });\r\n      solves.shift();\r\n      solves.pop();\r\n\r\n      return ((this.stringToInt(solves).reduce((a, b) => a + b, 0)) / 10).toFixed(2)\r\n    }\r\n  }\r\n\r\n \r\n\r\n  getSessionAvg() {\r\n    var session = []\r\n    if (this.props.record.length >= 3) {\r\n      session = session = session.concat(this.props.record);\r\n      session.sort(function (a, b) { return a - b });\r\n\r\n      session.shift();\r\n      session.pop();\r\n\r\n      this.setState({ session_average: ((this.stringToInt(session).reduce((a, b) => a + b, 0)) / (this.props.record.length - 2)).toFixed(2) });\r\n    }\r\n    else {\r\n      // this.setState({ session_average: \"\" })\r\n    }\r\n\r\n\r\n    return this.state.session_average;\r\n  }\r\n\r\n  getSessionMean() {\r\n    var session = []\r\n    if (this.props.record.length > 0) {\r\n      session = session = session.concat(this.props.record);\r\n      session.sort(function (a, b) { return a - b });\r\n\r\n      this.setState({ session_mean: ((this.stringToInt(session).reduce((a, b) => a + b, 0)) / this.props.record.length).toFixed(2) })\r\n    }\r\n    else {\r\n      // this.setState({ session_mean: \"\" });\r\n    }\r\n\r\n    return this.state.session_mean;\r\n  }\r\n\r\n  clearRecord() {\r\n    this.props.clearRecord();\r\n    this.setState({\r\n      ao5: \"\",\r\n      ao12: \"\",\r\n      ao50: \"\",\r\n      best: \"\",\r\n      worst: \"\",\r\n      record: \"\",\r\n    })\r\n  }\r\n\r\n  deleteLastSolve() {\r\n    console.log(\"Delete last solve called\");\r\n    this.props.record.pop();\r\n    this.setState({ record: this.props.record})\r\n  }\r\n\r\n  render() {\r\n\r\n    const graph = {\r\n      labels: this.state.x_axis,\r\n      datasets: [\r\n        {\r\n          label: 'Solve Times',\r\n          fill: false,\r\n          lineTension: 0.5,\r\n          backgroundColor: '#FFFFFF',\r\n          borderColor: '#483d8b',\r\n          borderWidth: 1,\r\n          data: this.props.record\r\n        }\r\n      ]\r\n    }\r\n      return (\r\n        <React.Fragment>\r\n          <div id=\"avg-container\">\r\n            <p id=\"avg-text\"> Average of 5: {this.state.ao5} </p>\r\n            <p id=\"avg-text\"> Average of 12: {this.state.ao12}</p>\r\n          </div>\r\n          <Row id=\"dashboard\">\r\n            <Col md={2} s={12} xs={12} id=\"stats_section\">\r\n              <Row>\r\n                <Col md={12} s={12} xs={12}>\r\n                  <p id=\"dashboard_header\">Session Summary</p>\r\n                  <div id=\"main_stats\">\r\n                    <div> <strong>Session Best:</strong> {this.state.best} </div>\r\n                    <div> <strong>Session Worst:</strong> {this.state.worst} </div>\r\n                    <div> <strong>Session Average:</strong>  {this.state.session_average}</div>\r\n                    <div> <strong>Session Mean</strong> {this.state.session_mean} </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col md={5} s={12} xs={12} id=\"data_section\">\r\n              <Row>\r\n                <Col md={4} s={12} xs={12}>\r\n                  <p id=\"dashboard_header\">Session Data</p>\r\n                  <p id=\"main_stats\">All individual times recorded for this session.</p>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.deleteLastSolve}> Delete Last </Button>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.clearRecord}>Reset</Button>\r\n                </Col>\r\n                <Col md={8} s={12} xs={12} id=\"recorded_times\">\r\n                  {this.props.record}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col md={5} s={12} xs={12} id=\"chart_section\">\r\n              <Row>\r\n                <Col md={4} s={12} xs={12}>\r\n                <p id=\"dashboard_header\">Session Chart</p>\r\n                <p id=\"main_stats\">Recorded times plotted on a chart for easier visualization.</p>\r\n                </Col>\r\n                <Col md={8} s={12} xs={12}>\r\n                  <Line data={graph}\r\n                  options={{\r\n                    maintainAspectRatio: true,\r\n                    scales: {\r\n                      yAxes: [{\r\n                        ticks: {\r\n                          beginAtZero: true\r\n                        }\r\n                      }]\r\n                    }\r\n                  }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Stats;","import React from 'react';\r\nimport refresh from '../../Assets/Refresh_icon.png';\r\nimport \"./Scrambler.css\";\r\nimport { Dropdown, Row } from 'react-bootstrap';\r\n\r\n\r\nclass Scrambler extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      scramble: '',\r\n      time: '',\r\n      solve_started: false,\r\n      puzzle_type: '3x3',\r\n      timer_type: 'Timer',\r\n    };\r\n\r\n    this.shuffle = this.shuffle.bind(this)\r\n    this.scramble = this.scramble.bind(this)\r\n    this.removeDuplicates = this.removeDuplicates.bind(this)\r\n    this.getRandomInt = this.getRandomInt.bind(this)\r\n    this.refreshScramble = this.refreshScramble.bind(this)\r\n    this.refreshOnSolve = this.refreshOnSolve.bind(this)\r\n    this.remove4x4Error = this.remove4x4Error.bind(this)\r\n    this.get3Scramble = this.get3Scramble.bind(this)\r\n    this.get4Scramble = this.get4Scramble.bind(this)\r\n    this.get5Scramble = this.get5Scramble.bind(this)\r\n    this.getMScramble = this.getMScramble.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Generates an initial scramble\r\n    this.scramble();\r\n    document.addEventListener(\"refresh_scr\", this.refreshOnSolve, true)\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.refreshScramble);\r\n    document.removeEventListener(\"refresh_scr\", this.refreshOnSolve, true)\r\n  }\r\n\r\n  refreshOnSolve() {\r\n    if (this.props.refresh === true) {\r\n      this.refreshScramble();\r\n    }\r\n    else {\r\n      // Do Nothing\r\n    }\r\n  }\r\n\r\n  get3Scramble() {\r\n    this.setState({ puzzle_type: \"3x3\" })\r\n    this.refreshScramble();\r\n  }\r\n\r\n  get4Scramble() {\r\n    this.setState({ puzzle_type: \"4x4\" })\r\n    this.refreshScramble();\r\n  }\r\n\r\n  get5Scramble() {\r\n    this.setState({ puzzle_type: \"5x5\" })\r\n    this.refreshScramble();\r\n  }\r\n\r\n  getMScramble() {\r\n    this.setState({ puzzle_type: \"Mega\" })\r\n    this.refreshScramble();\r\n  }\r\n\r\n  // Creates an array of sides and shuffles the element randomly\r\n  shuffle() {\r\n    var scr_array = [\"R\", \"U\", \"D\", \"L\", \"F\", \"B\"];\r\n    var currentIndex = scr_array.length, temporaryValue, randomIndex;\r\n\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      temporaryValue = scr_array[currentIndex];\r\n      scr_array[currentIndex] = scr_array[randomIndex];\r\n      scr_array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return scr_array;\r\n  }\r\n\r\n  // Removes 4x4 opposing layers turn from an array to prevent redundant moves\r\n  removeDuplicates(array, len = 0, canDelete = false) {\r\n    if (len < array.length) {\r\n      if (canDelete) {   // If element is the same as the next one, deletes 1 and go back 1 step. \r\n        array.splice(len, 1);\r\n        len = len - 2;\r\n      }\r\n\r\n      var consecutive = (array[len] === array[len + 1])\r\n      var one_apart;\r\n\r\n      switch (array[len]) {\r\n        case \"F\":\r\n          if (array[len + 1] === \"B\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n        case \"B\":\r\n          if (array[len + 1] === \"F\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n\r\n        case \"L\":\r\n          if (array[len + 1] === \"R\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n        case \"R\":\r\n          if (array[len + 1] === \"L\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n        case \"U\":\r\n          if (array[len + 1] === \"D\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n\r\n        case \"D\":\r\n          if (array[len + 1] === \"U\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n        default:\r\n          one_apart = false;\r\n          break;\r\n      }\r\n\r\n      var isDeletable;\r\n\r\n      if (consecutive || one_apart) {\r\n        isDeletable = true;\r\n      } else {\r\n        isDeletable = false;\r\n      }\r\n\r\n      return this.removeDuplicates(array, len + 1, isDeletable)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  remove4x4Error(array, len = 0, canDelete = false) {\r\n    if (len < array.length) {\r\n      if (canDelete) {\r\n        array.splice(len, 1);\r\n        len--;\r\n      }\r\n\r\n      var isDeletable;\r\n\r\n      switch (array[len]) {\r\n        case \"F\":\r\n          if (array[len + 1] === \"B\" || array[len - 1] === \"B\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"B\":\r\n          if (array[len + 1] === \"F\" || array[len - 1] === \"F\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"R\":\r\n          if (array[len + 1] === \"L\" || array[len - 1] === \"L\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"L\":\r\n          if (array[len + 1] === \"R\" || array[len - 1] === \"R\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"U\":\r\n          if (array[len + 1] === \"D\" || array[len - 1] === \"D\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"D\":\r\n          if (array[len + 1] === \"U\" || array[len - 1] === \"U\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n\r\n        default:\r\n          isDeletable = false;\r\n          break;\r\n      }\r\n\r\n      return this.remove4x4Error(array, len + 1, isDeletable)\r\n    }\r\n\r\n  }\r\n\r\n  // Generates a random number from a range indicated by max.\r\n  getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  }\r\n\r\n  // Generate a scramble based on selected puzzle type\r\n  scramble() {\r\n    switch (this.state.puzzle_type) {\r\n      case \"3x3\":\r\n        var array_1 = this.shuffle();\r\n        var array_2 = this.shuffle();\r\n        var array_3 = this.shuffle();\r\n        var array_4 = this.shuffle();\r\n\r\n        var final_scr = array_1.concat(array_2, array_3, array_4);\r\n\r\n        this.removeDuplicates(final_scr);\r\n\r\n        var i;\r\n\r\n        // Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n          switch (final_scr[i]) {\r\n            case \"R\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"R\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"R'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"R2\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"L\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"L\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"L'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"L2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"U\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"U\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"U'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"U2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"D\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"D\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"D'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"D2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"F\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"F\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"F'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"F2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"B\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"B\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"B'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"B2\"\r\n                  break;\r\n              }\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n        break;\r\n\r\n\r\n      case \"4x4\":\r\n        array_1 = this.shuffle();\r\n        array_2 = this.shuffle();\r\n        array_3 = this.shuffle();\r\n        array_4 = this.shuffle();\r\n        var array_5 = this.shuffle();\r\n        var array_6 = this.shuffle();\r\n        var array_7 = this.shuffle();\r\n        var array_8 = this.shuffle();\r\n\r\n        final_scr = array_1.concat(array_2, array_3, array_4, array_5, array_6, array_7, array_8);\r\n\r\n\r\n        this.removeDuplicates(final_scr);\r\n        this.remove4x4Error(final_scr);\r\n\r\n\r\n        //Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n          switch (final_scr[i]) {\r\n            case \"R\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"R\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"R'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"R2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Rw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Rw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Rw2\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"L\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"L\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"L'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"L2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Lw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Lw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Lw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"U\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"U\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"U'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"U2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Uw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Uw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Uw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"D\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"D\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"D'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"D2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Dw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Dw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Dw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"F\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"F\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"F'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"F2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Fw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Fw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Fw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"B\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"B\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"B'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"B2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Bw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Bw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Bw2\"\r\n                  break;\r\n              }\r\n\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n        break;\r\n\r\n      case \"5x5\":\r\n        array_1 = this.shuffle();\r\n        array_2 = this.shuffle();\r\n        array_3 = this.shuffle();\r\n        array_4 = this.shuffle();\r\n        array_5 = this.shuffle();\r\n        array_6 = this.shuffle();\r\n        array_7 = this.shuffle();\r\n        array_8 = this.shuffle();\r\n        var array_9 = this.shuffle();\r\n        var array_10 = this.shuffle();\r\n\r\n        final_scr = array_1.concat(array_2, array_3, array_4, array_5, array_6, array_7, array_8, array_9, array_10);\r\n\r\n\r\n        this.removeDuplicates(final_scr);\r\n\r\n\r\n        //Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n          switch (final_scr[i]) {\r\n            case \"R\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"R\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"R'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"R2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Rw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Rw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Rw2\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"L\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"L\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"L'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"L2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Lw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Lw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Lw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"U\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"U\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"U'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"U2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Uw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Uw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Uw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"D\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"D\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"D'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"D2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Dw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Dw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Dw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"F\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"F\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"F'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"F2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Fw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Fw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Fw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"B\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"B\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"B'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"B2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Bw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Bw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Bw2\"\r\n                  break;\r\n              }\r\n\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n        break;\r\n\r\n      case \"Mega\":\r\n        var m_array_1 = [\"R\", \"D\", \"R\", \"D\", \"R\", \"D\", \"R\", \"D\", \"R\", \"D\", \"U\"]\r\n        var m_array_2 = m_array_1;\r\n        var m_array_3 = m_array_1;\r\n        var m_array_4 = m_array_1;\r\n        var m_array_5 = m_array_1;\r\n\r\n        final_scr = m_array_1.concat(m_array_2, m_array_3, m_array_4, m_array_5);\r\n\r\n\r\n        //Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n          switch (final_scr[i]) {\r\n            case \"R\":\r\n              switch (this.getRandomInt(2)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"R++\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"R--\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"D\":\r\n              switch (this.getRandomInt(2)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"D++\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"D--\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"U\":\r\n              switch (this.getRandomInt(2)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"U\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"U'\"\r\n                  break;\r\n              }\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n        break;\r\n\r\n      default:\r\n        return this.state.scramble;\r\n    }\r\n  }\r\n\r\n\r\n  refreshScramble() {\r\n    setTimeout(this.scramble, 500);\r\n  }\r\n\r\n  setTimerType(type) {\r\n    if(this.state.timer_type !== type) {\r\n      this.setState({ timer_type: type });\r\n      this.props.toggleType();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row id=\"scramble-container\">\r\n        <Dropdown id=\"scramble-selector\">\r\n          <Dropdown.Toggle variant=\"outline-light\" id=\"dropdown-text\">\r\n            {this.state.puzzle_type}\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item id=\"dropdown-text\" onClick={this.get3Scramble}> 3x3 </Dropdown.Item>\r\n            <Dropdown.Item id=\"dropdown-text\" onClick={this.get4Scramble}> 4x4 </Dropdown.Item>\r\n            <Dropdown.Item id=\"dropdown-text\" onClick={this.get5Scramble}> 5x5 </Dropdown.Item>\r\n            <Dropdown.Item id=\"dropdown-text\" onClick={this.getMScramble}> Megaminx </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n\r\n        </Dropdown>\r\n\r\n        <Dropdown id=\"scramble-selector\">\r\n          <Dropdown.Toggle variant=\"outline-light\" id=\"dropdown-text\">\r\n            {this.state.timer_type}\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item id=\"dropdown-text\" onClick={() => this.setTimerType(\"Timer\")}> Timer </Dropdown.Item>\r\n            <Dropdown.Item id=\"dropdown-text\" onClick={() => this.setTimerType(\"Manual\")}> Manual Input </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n\r\n        </Dropdown>\r\n\r\n        <p id=\"scramble\">\r\n          {this.state.scramble}\r\n          {this.refreshOnSolve()}\r\n        </p>\r\n\r\n        <img src={refresh} onClick={this.refreshScramble} id=\"refresh_icon\" alt=\"refresh_button\" />\r\n\r\n\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scrambler;","import React from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport Stats from '../Statistics/Statistics.js';\r\nimport Scrambler from '../Scrambler/Scrambler.js';\r\nimport ReactTouchEvents from 'react-touch-events';\r\nimport \"./Timer.css\";\r\n\r\nclass Timer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      time: 0,\r\n      start: 0,\r\n      isOn: false,\r\n      result: 0,\r\n      record: [],\r\n      refresh: false,\r\n      width: 0,\r\n      manualInput: false,\r\n    };\r\n\r\n    this.startTimer = this.startTimer.bind(this)\r\n    this.stopTimer = this.stopTimer.bind(this)\r\n    this.resetTimer = this.resetTimer.bind(this)\r\n    this.handleSpace = this.handleSpace.bind(this)\r\n    this.clearRecord = this.clearRecord.bind(this)\r\n    this.refresh = this.refresh.bind(this)\r\n    this.msToTime = this.msToTime.bind(this)\r\n    this.handleHold = this.handleHold.bind(this)\r\n    // this.handleWindowSizeChange = this.handleWindowSizeChange.bind(this)\r\n    this.toggleType = this.toggleType.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.setState({ width: window.innerWidth });\r\n    document.addEventListener(\"spacebar\", this.handleSpace, true);\r\n\r\n  }\r\n\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"resize\", this.handleWindowSizeChange,true);\r\n    document.removeEventListener(\"spacebar\", this.handleSpace, true);\r\n  }\r\n\r\n  handleWindowSizeChange() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    this.setState({ time: e.target.value });\r\n  }\r\n\r\n  handleInputSubmit(e) {\r\n    this.setState({ refresh: true }, () => setTimeout(this.refresh, 500));     \r\n    e.preventDefault();\r\n  }\r\n\r\n  handleSpace(e) {\r\n    if(this.state.manualInput){\r\n      return;\r\n    }else{\r\n      // Starts timer when spacebar is pressed.\r\n      if (e.keyCode === 32) {\r\n        if (this.state.time === 0) {\r\n          this.startTimer()\r\n          // console.log(\"starttimer called\");  For debugging\r\n        }\r\n        else {\r\n          // Stops timer, wait 0.5s then export and reset.\r\n          this.stopTimer();\r\n          this.setState({ refresh: true }, () => setTimeout(this.refresh, 500));     \r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleHold(e) {\r\n    if (this.state.time === 0) {\r\n      setTimeout(this.startTimer(), 1000);\r\n    }\r\n    else {\r\n      this.stopTimer();\r\n      this.setState({ refresh: true });\r\n      setTimeout(this.refresh, 500);\r\n    }\r\n  }\r\n\r\n\r\n  // Formatting time to hh:mm:ss.ms format\r\n  msToTime(s) {\r\n    // Pad to 2 or 3 digits, default is 2\r\n    var pad = (n, z = 2) => ('00' + n).slice(-z);\r\n    if (s < 60000) {\r\n      return pad((s % 6e4) / 1000 | 0) + '.' + pad(s % 1000, 2) + \"  \";\r\n    }\r\n    else if (s >= 60000 && s < 3600000) {\r\n      return pad((s % 3.6e6) / 6e4 | 0) + ':' + pad((s % 6e4) / 1000 | 0) + '.' + pad(s % 1000, 2) + \"  \";\r\n    }\r\n    else if (s >= 3600000) {\r\n      return pad(s / 3.6e6 | 0) + ':' + pad((s % 3.6e6) / 6e4 | 0) + ':' + pad((s % 6e4) / 1000 | 0) + '.' + pad(s % 1000, 2) + \"  \";\r\n    }\r\n    else {\r\n      alert(\"Wake up fool! You're taking too long to solve that cube!\");\r\n    }\r\n  }\r\n\r\n  // Function to start timer.\r\n  startTimer() {\r\n    // Starts timing by constantly checking for current time and saving to state.\r\n    this.setState({\r\n      time: this.state.time,\r\n      start: Date.now() - this.state.time,\r\n      isOn: true\r\n    });\r\n\r\n\r\n    this.timer = setInterval(() => this.setState({\r\n      time: this.msToTime(Date.now() - this.state.start)\r\n    }), 1);\r\n\r\n  }\r\n\r\n  // Function to check time passed since finger tap / space pressed.\r\n\r\n  // Refresh and export time.\r\n  refresh() {\r\n    this.setState({ refresh: false });\r\n    this.exportTime();\r\n    this.resetTimer();\r\n  }\r\n\r\n  // Stopping timer.\r\n  stopTimer() {\r\n    this.setState({\r\n      isOn: false,\r\n      refresh: true,\r\n    })\r\n    clearInterval(this.timer)\r\n  }\r\n\r\n  // Resetting timer to 0.\r\n  resetTimer() {\r\n    this.setState({\r\n      time: 0,\r\n      refresh: false\r\n    })\r\n  }\r\n\r\n  // Adding time to this.state.record for exporting to Statistics component\r\n  exportTime() {\r\n    this.setState({ record: this.state.record.concat(this.state.time) });\r\n  }\r\n\r\n  // Clearing all times\r\n  clearRecord() {\r\n    this.setState({ record: [] });\r\n  }\r\n\r\n  toggleType() {\r\n    console.log(\"Toggle Type Called\");\r\n    this.setState({ manualInput: !this.state.manualInput });\r\n  }\r\n\r\n  render() {\r\n    const isTouchDevice = this.state.width <= 768;\r\n\r\n    if (isTouchDevice) {\r\n      return (\r\n        <div onKeyUp={this.handleSpace} tabIndex=\"0\" id=\"timer-container\">\r\n\r\n          {/* Passing refresh as prop to Scrambler for scramble sequence to refresh when timer stops. */}\r\n          <Scrambler refresh={this.state.refresh} toggleType={() => this.toggleType()} />\r\n\r\n          {this.state.manualInput ? \r\n            <>\r\n              <form onSubmit={(e) => this.handleInputSubmit(e)}>\r\n                <input id=\"manual-input\" type=\"text\" value={this.state.time} onChange={(e) => this.handleInputChange(e)} />\r\n              </form>\r\n            </>\r\n            :\r\n            <ReactTouchEvents onTap={this.handleHold}>\r\n              <p id=\"timer-text\"> {this.state.time} </p>\r\n            </ReactTouchEvents>\r\n          }\r\n\r\n          {/* Passing record & clear record to statistics for processing */}\r\n          <Stats record={this.state.record} clearRecord={this.clearRecord} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div onKeyUp={this.handleSpace} tabIndex=\"0\" id=\"timer-container\">\r\n          {/* Passing refresh as prop to Scrambler for scramble sequence to refresh when timer stops. */}\r\n          <Row>\r\n            <Scrambler refresh={this.state.refresh} toggleType={() => this.toggleType()} />\r\n          </Row>\r\n          {this.state.manualInput ? \"\" :\r\n            <p id=\"timer-text\"> {this.state.time} </p>\r\n          }\r\n\r\n          {/* Passing record & clear record to statistics for processing */}\r\n          <Stats record={this.state.record} clearRecord={this.clearRecord} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\nimport Timer from './Components/Timer/Timer.js';\r\nimport { Row } from \"react-bootstrap\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <div id=\"simplict\">\r\n        <Row>\r\n          <Timer />\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}