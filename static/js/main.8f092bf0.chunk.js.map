{"version":3,"sources":["Assets/Refresh_icon.png","Components/Statistics/Statistics.js","Components/Scrambler/Scrambler.js","Components/Timer/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Stats","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","record","ao5","ao12","best","worst","session_average","session_mean","full_record","x_axis","width","window","innerWidth","avg_of_5","bind","_assertThisInitialized","avg_of_12","stringToInt","clearRecord","getBest","getWorst","getSessionAvg","deleteLastSolve","generateX","handleWindowSizeChange","_createClass","key","value","addEventListener","this","handleSpace","prevProps","length","props","setState","getSessionMean","array","map","Number","labels","i","concat","session","sort","a","b","shift","pop","solves","x","reduce","toFixed","ao50","console","log","chartData","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","_jsxs","React","Fragment","children","id","Row","_jsx","Col","lg","md","xs","Button","variant","onClick","Line","height","options","responsive","scales","yAxes","ticks","beginAtZero","Component","Scrambler","scramble","time","solve_started","puzzle_type","timer_type","shuffle","removeDuplicates","getRandomInt","refreshScramble","refreshOnSolve","remove4x4Error","get3Scramble","get4Scramble","get5Scramble","getMScramble","document","clearTimeout","removeEventListener","refresh","temporaryValue","randomIndex","scr_array","currentIndex","Math","floor","random","len","arguments","undefined","canDelete","splice","one_apart","isDeletable","consecutive","max","array_1","array_2","array_3","array_4","final_scr","join","array_5","array_6","array_7","array_8","array_9","array_10","m_array_1","m_array_2","m_array_3","m_array_4","m_array_5","setTimeout","type","toggleType","_this2","Dropdown","Toggle","Menu","Item","setTimerType","src","alt","Timer","start","isOn","result","manualInput","startTimer","stopTimer","resetTimer","msToTime","handleHold","e","target","preventDefault","_this3","keyCode","s","pad","n","z","slice","alert","_this4","Date","now","timer","setInterval","exportTime","clearInterval","_this5","onKeyUp","tabIndex","_Fragment","onSubmit","handleInputSubmit","onChange","handleInputChange","ReactTouchEvents","onTap","App","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8f092bf0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Refresh_icon.a86495a5.png\";","import React from 'react';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport { Line } from 'react-chartjs-2';\r\nimport refresh from '../../Assets/Refresh_icon.png';\r\nimport \"./Statistics.css\";\r\n\r\nclass Stats extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      record: [],\r\n      ao5: 0,\r\n      ao12: 0,\r\n      best: 0,\r\n      worst: 0,\r\n      session_average: 0,\r\n      session_mean: 0,\r\n      full_record: [],\r\n      x_axis: [],\r\n      width: window.innerWidth,\r\n    };\r\n\r\n    this.avg_of_5 = this.avg_of_5.bind(this)\r\n    this.avg_of_12 = this.avg_of_12.bind(this)\r\n    this.stringToInt = this.stringToInt.bind(this)\r\n    this.clearRecord = this.clearRecord.bind(this)\r\n    this.getBest = this.getBest.bind(this)\r\n    this.getWorst = this.getWorst.bind(this)\r\n    this.getSessionAvg = this.getSessionAvg.bind(this)\r\n    this.deleteLastSolve = this.deleteLastSolve.bind(this)\r\n    this.generateX = this.generateX.bind(this)\r\n    this.handleWindowSizeChange = this.handleWindowSizeChange.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"spacebar\", this.handleSpace, true);\r\n    window.addEventListener(\"resize\", this.handleWindowSizeChange);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.record.length !== this.props.record.length){\r\n      this.setState({\r\n        ao5: this.avg_of_5(),\r\n        ao12: this.avg_of_12(),\r\n        best: this.getBest(),\r\n        worst: this.getWorst(),\r\n        session_average: this.getSessionAvg(),\r\n        session_mean: this.getSessionMean(),\r\n        x_axis: this.generateX(),\r\n      })\r\n    }\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   window.removeEventListener(\"spacebar\", this.handleSpace, true);\r\n  //   window.removeEventListener(\"resize\", this.handleWindowSizeChange);\r\n  // }\r\n\r\n  handleWindowSizeChange(){\r\n    this.setState({ width: window.innerWidth});\r\n  }\r\n\r\n  stringToInt(array) {\r\n    return array.map(Number);\r\n  }\r\n\r\n  generateX() {\r\n    var labels = []\r\n    for (var i = 1; i <= this.props.record.length; i++) {\r\n      labels = labels.concat(i);\r\n    }\r\n\r\n    return labels;\r\n  }\r\n\r\n  getBest() {\r\n    var session = [];\r\n    session = session.concat(this.props.record);\r\n    session.sort(function (a, b) { return a - b });\r\n\r\n    return session.shift();\r\n  }\r\n\r\n  getWorst() {\r\n    var session = [];\r\n    session = session.concat(this.props.record);\r\n    session.sort(function (a, b) { return a - b });\r\n\r\n    return session.pop();\r\n  }\r\n\r\n  avg_of_5() {\r\n    if (this.props.record.length >= 5) {\r\n      var i = this.props.record.length - 1;\r\n      var solves = []\r\n      for (var x = i; (i - x) < 5; x--) {\r\n        solves = solves.concat(this.props.record[x])\r\n      }\r\n\r\n      this.setState({record: solves});\r\n      solves.sort(function (a, b) { return a - b });\r\n      solves.shift();\r\n      solves.pop();\r\n\r\n      return ((this.stringToInt(solves).reduce((a, b) => a + b, 0)) / 3).toFixed(2);\r\n\r\n    }\r\n  }\r\n\r\n  avg_of_12() {\r\n    if (this.props.record.length >= 12) {\r\n      var i = this.props.record.length - 1;\r\n      var solves = []\r\n      for (var x = i; (i - x) < 12; x--) {\r\n        solves = solves.concat(this.props.record[x])\r\n      }\r\n\r\n      this.setState({record: solves});\r\n      solves.sort(function (a, b) { return a - b });\r\n      solves.shift();\r\n      solves.pop();\r\n\r\n      return ((this.stringToInt(solves).reduce((a, b) => a + b, 0)) / 10).toFixed(2)\r\n    }\r\n  }\r\n\r\n \r\n\r\n  getSessionAvg() {\r\n    var session = []\r\n    if (this.props.record.length >= 3) {\r\n      session = session = session.concat(this.props.record);\r\n      session.sort(function (a, b) { return a - b });\r\n\r\n      session.shift();\r\n      session.pop();\r\n\r\n    }\r\n\r\n    return ((this.stringToInt(session).reduce((a, b) => a + b, 0)) / (this.props.record.length - 2)).toFixed(2);\r\n  }\r\n\r\n  getSessionMean() {\r\n    var session = []\r\n    if (this.props.record.length > 0) {\r\n      session = session = session.concat(this.props.record);\r\n      session.sort(function (a, b) { return a - b });\r\n    }\r\n\r\n    return ((this.stringToInt(session).reduce((a, b) => a + b, 0)) / this.props.record.length).toFixed(2);\r\n  }\r\n\r\n  clearRecord() {\r\n    this.props.clearRecord();\r\n    this.setState({\r\n      ao5: \"\",\r\n      ao12: \"\",\r\n      ao50: \"\",\r\n      best: \"\",\r\n      worst: \"\",\r\n      record: \"\",\r\n    })\r\n  }\r\n\r\n  deleteLastSolve() {\r\n    console.log(\"Delete last solve called\");\r\n    this.props.record.pop();\r\n    this.setState({ record: this.props.record})\r\n  }\r\n\r\n  render() {\r\n    const chartOptions={\r\n      // maintainAspectRatio: true,\r\n      responsive: true,\r\n      height: \"10rem\",\r\n      scales: {\r\n        yAxes: [{\r\n          ticks: {\r\n            beginAtZero: true\r\n          }\r\n        }]\r\n      }\r\n    }\r\n\r\n    const chartData = {\r\n      labels: this.state.x_axis,\r\n      datasets: [\r\n        {\r\n          label: 'Solve Times',\r\n          fill: false,\r\n          lineTension: 0.5,\r\n          backgroundColor: '#FFFFFF',\r\n          borderColor: '#483d8b',\r\n          borderWidth: 1,\r\n          data: this.props.record\r\n        }\r\n      ]\r\n    }\r\n      return (\r\n        <React.Fragment>\r\n          <div id=\"avg-container\">\r\n            <p id=\"avg-text\"> Average of 5: {this.state.ao5} </p>\r\n            <p id=\"avg-text\"> Average of 12: {this.state.ao12}</p>\r\n          </div>\r\n          <Row id=\"dashboard\">\r\n            <Col lg={2} md={12} xs={12} id=\"stats_section\">\r\n              <Row>\r\n                <Col lg={12} md={12} xs={12}>\r\n                  <p id=\"dashboard_header\">Session Summary</p>\r\n                  <div id=\"main_stats\">\r\n                    <div> <strong>Session Best:</strong> {this.state.best} </div>\r\n                    <div> <strong>Session Worst:</strong> {this.state.worst} </div>\r\n                    <div> <strong>Session Average:</strong>  {this.state.session_average}</div>\r\n                    <div> <strong>Session Mean</strong> {this.state.session_mean} </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col lg={5} md={12} xs={12} id=\"data_section\">\r\n              <Row>\r\n                <Col lg={4} md={12} xs={12}>\r\n                  <p id=\"dashboard_header\">Session Data</p>\r\n                  <p id=\"main_stats\">All individual times recorded for this session.</p>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.deleteLastSolve}> Delete Last </Button>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.clearRecord}>Reset</Button>\r\n                </Col>\r\n                <Col lg={8} md={12} xs={12} id=\"recorded_times\">\r\n                  {this.props.record}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col lg={5} md={12} xs={12} id=\"chart_section\">\r\n              <Row>\r\n                <Col lg={4} md={12} xs={12}>\r\n                <p id=\"dashboard_header\">Session Chart</p>\r\n                <p id=\"main_stats\">Recorded times plotted on a chart for easier visualization.</p>\r\n                </Col>\r\n                <Col lg={8} md={12} xs={12}>\r\n                  <Line data={chartData}\r\n                  width={5}\r\n                  height={2}\r\n                  options={chartOptions}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Stats;","import React from 'react';\r\nimport refresh from '../../Assets/Refresh_icon.png';\r\nimport \"./Scrambler.css\";\r\nimport { Dropdown, Row } from 'react-bootstrap';\r\n\r\n\r\nclass Scrambler extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      scramble: '',\r\n      time: '',\r\n      solve_started: false,\r\n      puzzle_type: '3x3',\r\n      timer_type: 'Timer',\r\n    };\r\n\r\n    this.shuffle = this.shuffle.bind(this)\r\n    this.scramble = this.scramble.bind(this)\r\n    this.removeDuplicates = this.removeDuplicates.bind(this)\r\n    this.getRandomInt = this.getRandomInt.bind(this)\r\n    this.refreshScramble = this.refreshScramble.bind(this)\r\n    this.refreshOnSolve = this.refreshOnSolve.bind(this)\r\n    this.remove4x4Error = this.remove4x4Error.bind(this)\r\n    this.get3Scramble = this.get3Scramble.bind(this)\r\n    this.get4Scramble = this.get4Scramble.bind(this)\r\n    this.get5Scramble = this.get5Scramble.bind(this)\r\n    this.getMScramble = this.getMScramble.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Generates an initial scramble\r\n    this.scramble();\r\n    document.addEventListener(\"refresh_scr\", this.refreshOnSolve, true)\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.refreshScramble);\r\n    document.removeEventListener(\"refresh_scr\", this.refreshOnSolve, true)\r\n  }\r\n\r\n  refreshOnSolve() {\r\n    if (this.props.refresh === true) {\r\n      this.refreshScramble();\r\n    }\r\n    else {\r\n      // Do Nothing\r\n    }\r\n  }\r\n\r\n  get3Scramble() {\r\n    this.setState({ puzzle_type: \"3x3\" })\r\n    this.refreshScramble();\r\n  }\r\n\r\n  get4Scramble() {\r\n    this.setState({ puzzle_type: \"4x4\" })\r\n    this.refreshScramble();\r\n  }\r\n\r\n  get5Scramble() {\r\n    this.setState({ puzzle_type: \"5x5\" })\r\n    this.refreshScramble();\r\n  }\r\n\r\n  getMScramble() {\r\n    this.setState({ puzzle_type: \"Mega\" })\r\n    this.refreshScramble();\r\n  }\r\n\r\n  // Creates an array of sides and shuffles the element randomly\r\n  shuffle() {\r\n    var scr_array = [\"R\", \"U\", \"D\", \"L\", \"F\", \"B\"];\r\n    var currentIndex = scr_array.length, temporaryValue, randomIndex;\r\n\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      temporaryValue = scr_array[currentIndex];\r\n      scr_array[currentIndex] = scr_array[randomIndex];\r\n      scr_array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return scr_array;\r\n  }\r\n\r\n  // Removes 4x4 opposing layers turn from an array to prevent redundant moves\r\n  removeDuplicates(array, len = 0, canDelete = false) {\r\n    if (len < array.length) {\r\n      if (canDelete) {   // If element is the same as the next one, deletes 1 and go back 1 step. \r\n        array.splice(len, 1);\r\n        len = len - 2;\r\n      }\r\n\r\n      var consecutive = (array[len] === array[len + 1])\r\n      var one_apart;\r\n\r\n      switch (array[len]) {\r\n        case \"F\":\r\n          if (array[len + 1] === \"B\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n        case \"B\":\r\n          if (array[len + 1] === \"F\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n\r\n        case \"L\":\r\n          if (array[len + 1] === \"R\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n        case \"R\":\r\n          if (array[len + 1] === \"L\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n        case \"U\":\r\n          if (array[len + 1] === \"D\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n\r\n        case \"D\":\r\n          if (array[len + 1] === \"U\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n        default:\r\n          one_apart = false;\r\n          break;\r\n      }\r\n\r\n      var isDeletable;\r\n\r\n      if (consecutive || one_apart) {\r\n        isDeletable = true;\r\n      } else {\r\n        isDeletable = false;\r\n      }\r\n\r\n      return this.removeDuplicates(array, len + 1, isDeletable)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  remove4x4Error(array, len = 0, canDelete = false) {\r\n    if (len < array.length) {\r\n      if (canDelete) {\r\n        array.splice(len, 1);\r\n        len--;\r\n      }\r\n\r\n      var isDeletable;\r\n\r\n      switch (array[len]) {\r\n        case \"F\":\r\n          if (array[len + 1] === \"B\" || array[len - 1] === \"B\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"B\":\r\n          if (array[len + 1] === \"F\" || array[len - 1] === \"F\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"R\":\r\n          if (array[len + 1] === \"L\" || array[len - 1] === \"L\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"L\":\r\n          if (array[len + 1] === \"R\" || array[len - 1] === \"R\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"U\":\r\n          if (array[len + 1] === \"D\" || array[len - 1] === \"D\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"D\":\r\n          if (array[len + 1] === \"U\" || array[len - 1] === \"U\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n\r\n        default:\r\n          isDeletable = false;\r\n          break;\r\n      }\r\n\r\n      return this.remove4x4Error(array, len + 1, isDeletable)\r\n    }\r\n\r\n  }\r\n\r\n  // Generates a random number from a range indicated by max.\r\n  getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  }\r\n\r\n  // Generate a scramble based on selected puzzle type\r\n  scramble() {\r\n    switch (this.state.puzzle_type) {\r\n      case \"3x3\":\r\n        var array_1 = this.shuffle();\r\n        var array_2 = this.shuffle();\r\n        var array_3 = this.shuffle();\r\n        var array_4 = this.shuffle();\r\n\r\n        var final_scr = array_1.concat(array_2, array_3, array_4);\r\n\r\n        this.removeDuplicates(final_scr);\r\n\r\n        var i;\r\n\r\n        // Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n          switch (final_scr[i]) {\r\n            case \"R\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"R\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"R'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"R2\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"L\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"L\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"L'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"L2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"U\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"U\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"U'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"U2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"D\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"D\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"D'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"D2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"F\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"F\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"F'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"F2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"B\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"B\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"B'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"B2\"\r\n                  break;\r\n              }\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n        break;\r\n\r\n\r\n      case \"4x4\":\r\n        array_1 = this.shuffle();\r\n        array_2 = this.shuffle();\r\n        array_3 = this.shuffle();\r\n        array_4 = this.shuffle();\r\n        var array_5 = this.shuffle();\r\n        var array_6 = this.shuffle();\r\n        var array_7 = this.shuffle();\r\n        var array_8 = this.shuffle();\r\n\r\n        final_scr = array_1.concat(array_2, array_3, array_4, array_5, array_6, array_7, array_8);\r\n\r\n\r\n        this.removeDuplicates(final_scr);\r\n        this.remove4x4Error(final_scr);\r\n\r\n\r\n        //Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n          switch (final_scr[i]) {\r\n            case \"R\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"R\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"R'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"R2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Rw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Rw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Rw2\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"L\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"L\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"L'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"L2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Lw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Lw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Lw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"U\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"U\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"U'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"U2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Uw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Uw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Uw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"D\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"D\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"D'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"D2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Dw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Dw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Dw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"F\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"F\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"F'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"F2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Fw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Fw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Fw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"B\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"B\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"B'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"B2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Bw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Bw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Bw2\"\r\n                  break;\r\n              }\r\n\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n        break;\r\n\r\n      case \"5x5\":\r\n        array_1 = this.shuffle();\r\n        array_2 = this.shuffle();\r\n        array_3 = this.shuffle();\r\n        array_4 = this.shuffle();\r\n        array_5 = this.shuffle();\r\n        array_6 = this.shuffle();\r\n        array_7 = this.shuffle();\r\n        array_8 = this.shuffle();\r\n        var array_9 = this.shuffle();\r\n        var array_10 = this.shuffle();\r\n\r\n        final_scr = array_1.concat(array_2, array_3, array_4, array_5, array_6, array_7, array_8, array_9, array_10);\r\n\r\n\r\n        this.removeDuplicates(final_scr);\r\n\r\n\r\n        //Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n          switch (final_scr[i]) {\r\n            case \"R\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"R\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"R'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"R2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Rw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Rw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Rw2\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"L\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"L\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"L'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"L2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Lw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Lw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Lw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"U\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"U\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"U'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"U2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Uw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Uw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Uw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"D\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"D\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"D'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"D2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Dw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Dw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Dw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"F\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"F\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"F'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"F2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Fw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Fw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Fw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"B\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"B\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"B'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"B2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Bw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Bw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Bw2\"\r\n                  break;\r\n              }\r\n\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n        break;\r\n\r\n      case \"Mega\":\r\n        var m_array_1 = [\"R\", \"D\", \"R\", \"D\", \"R\", \"D\", \"R\", \"D\", \"R\", \"D\", \"U\"]\r\n        var m_array_2 = m_array_1;\r\n        var m_array_3 = m_array_1;\r\n        var m_array_4 = m_array_1;\r\n        var m_array_5 = m_array_1;\r\n\r\n        final_scr = m_array_1.concat(m_array_2, m_array_3, m_array_4, m_array_5);\r\n\r\n\r\n        //Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n          switch (final_scr[i]) {\r\n            case \"R\":\r\n              switch (this.getRandomInt(2)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"R++\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"R--\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"D\":\r\n              switch (this.getRandomInt(2)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"D++\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"D--\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"U\":\r\n              switch (this.getRandomInt(2)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"U\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"U'\"\r\n                  break;\r\n              }\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n        break;\r\n\r\n      default:\r\n        return this.state.scramble;\r\n    }\r\n  }\r\n\r\n\r\n  refreshScramble() {\r\n    setTimeout(this.scramble, 500);\r\n  }\r\n\r\n  setTimerType(type) {\r\n    if(this.state.timer_type !== type) {\r\n      this.setState({ timer_type: type });\r\n      this.props.toggleType();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row id=\"scramble-container\">\r\n        <Dropdown id=\"scramble-selector\">\r\n          <Dropdown.Toggle variant=\"outline-light\" id=\"dropdown-text\">\r\n            {this.state.puzzle_type}\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item id=\"dropdown-text\" onClick={this.get3Scramble}> 3x3 </Dropdown.Item>\r\n            <Dropdown.Item id=\"dropdown-text\" onClick={this.get4Scramble}> 4x4 </Dropdown.Item>\r\n            <Dropdown.Item id=\"dropdown-text\" onClick={this.get5Scramble}> 5x5 </Dropdown.Item>\r\n            <Dropdown.Item id=\"dropdown-text\" onClick={this.getMScramble}> Megaminx </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n\r\n        </Dropdown>\r\n\r\n        <Dropdown id=\"scramble-selector\">\r\n          <Dropdown.Toggle variant=\"outline-light\" id=\"dropdown-text\">\r\n            {this.state.timer_type}\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item id=\"dropdown-text\" onClick={() => this.setTimerType(\"Timer\")}> Timer </Dropdown.Item>\r\n            <Dropdown.Item id=\"dropdown-text\" onClick={() => this.setTimerType(\"Manual\")}> Manual Input </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n\r\n        </Dropdown>\r\n\r\n        <p id=\"scramble\">\r\n          {this.state.scramble}\r\n          {this.refreshOnSolve()}\r\n        </p>\r\n\r\n        <img src={refresh} onClick={this.refreshScramble} id=\"refresh_icon\" alt=\"refresh_button\" />\r\n\r\n\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scrambler;","import React from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport Stats from '../Statistics/Statistics.js';\r\nimport Scrambler from '../Scrambler/Scrambler.js';\r\nimport ReactTouchEvents from 'react-touch-events';\r\nimport \"./Timer.css\";\r\n\r\nclass Timer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      time: 0,\r\n      start: 0,\r\n      isOn: false,\r\n      result: 0,\r\n      record: [],\r\n      refresh: false,\r\n      width: 0,\r\n      manualInput: false,\r\n    };\r\n\r\n    this.startTimer = this.startTimer.bind(this)\r\n    this.stopTimer = this.stopTimer.bind(this)\r\n    this.resetTimer = this.resetTimer.bind(this)\r\n    this.handleSpace = this.handleSpace.bind(this)\r\n    this.clearRecord = this.clearRecord.bind(this)\r\n    this.refresh = this.refresh.bind(this)\r\n    this.msToTime = this.msToTime.bind(this)\r\n    this.handleHold = this.handleHold.bind(this)\r\n    // this.handleWindowSizeChange = this.handleWindowSizeChange.bind(this)\r\n    this.toggleType = this.toggleType.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.setState({ width: window.innerWidth });\r\n    document.addEventListener(\"spacebar\", this.handleSpace, true);\r\n\r\n  }\r\n\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"resize\", this.handleWindowSizeChange,true);\r\n    document.removeEventListener(\"spacebar\", this.handleSpace, true);\r\n  }\r\n\r\n  handleWindowSizeChange() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    this.setState({ time: e.target.value });\r\n  }\r\n\r\n  handleInputSubmit(e) {\r\n    this.setState({ refresh: true }, () => setTimeout(this.refresh, 500));     \r\n    e.preventDefault();\r\n  }\r\n\r\n  handleSpace(e) {\r\n    if(this.state.manualInput){\r\n      return;\r\n    }else{\r\n      // Starts timer when spacebar is pressed.\r\n      if (e.keyCode === 32) {\r\n        if (this.state.time === 0) {\r\n          this.startTimer()\r\n          // console.log(\"starttimer called\");  For debugging\r\n        }\r\n        else {\r\n          // Stops timer, wait 0.5s then export and reset.\r\n          this.stopTimer();\r\n          this.setState({ refresh: true }, () => setTimeout(this.refresh, 500));     \r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleHold(e) {\r\n    if (this.state.time === 0) {\r\n      setTimeout(this.startTimer(), 1000);\r\n    }\r\n    else {\r\n      this.stopTimer();\r\n      this.setState({ refresh: true });\r\n      setTimeout(this.refresh, 500);\r\n    }\r\n  }\r\n\r\n\r\n  // Formatting time to hh:mm:ss.ms format\r\n  msToTime(s) {\r\n    // Pad to 2 or 3 digits, default is 2\r\n    var pad = (n, z = 2) => ('00' + n).slice(-z);\r\n    if (s < 60000) {\r\n      return pad((s % 6e4) / 1000 | 0) + '.' + pad(s % 1000, 2) + \"  \";\r\n    }\r\n    else if (s >= 60000 && s < 3600000) {\r\n      return pad((s % 3.6e6) / 6e4 | 0) + ':' + pad((s % 6e4) / 1000 | 0) + '.' + pad(s % 1000, 2) + \"  \";\r\n    }\r\n    else if (s >= 3600000) {\r\n      return pad(s / 3.6e6 | 0) + ':' + pad((s % 3.6e6) / 6e4 | 0) + ':' + pad((s % 6e4) / 1000 | 0) + '.' + pad(s % 1000, 2) + \"  \";\r\n    }\r\n    else {\r\n      alert(\"Wake up fool! You're taking too long to solve that cube!\");\r\n    }\r\n  }\r\n\r\n  // Function to start timer.\r\n  startTimer() {\r\n    // Starts timing by constantly checking for current time and saving to state.\r\n    this.setState({\r\n      time: this.state.time,\r\n      start: Date.now() - this.state.time,\r\n      isOn: true\r\n    });\r\n\r\n\r\n    this.timer = setInterval(() => this.setState({\r\n      time: this.msToTime(Date.now() - this.state.start)\r\n    }), 1);\r\n\r\n  }\r\n\r\n  // Function to check time passed since finger tap / space pressed.\r\n\r\n  // Refresh and export time.\r\n  refresh() {\r\n    this.setState({ refresh: false });\r\n    this.exportTime();\r\n    this.resetTimer();\r\n  }\r\n\r\n  // Stopping timer.\r\n  stopTimer() {\r\n    this.setState({\r\n      isOn: false,\r\n      refresh: true,\r\n    })\r\n    clearInterval(this.timer)\r\n  }\r\n\r\n  // Resetting timer to 0.\r\n  resetTimer() {\r\n    this.setState({\r\n      time: 0,\r\n      refresh: false\r\n    })\r\n  }\r\n\r\n  // Adding time to this.state.record for exporting to Statistics component\r\n  exportTime() {\r\n    this.setState({ record: this.state.record.concat(this.state.time) });\r\n  }\r\n\r\n  // Clearing all times\r\n  clearRecord() {\r\n    this.setState({ record: [] });\r\n  }\r\n\r\n  toggleType() {\r\n    console.log(\"Toggle Type Called\");\r\n    this.setState({ manualInput: !this.state.manualInput });\r\n  }\r\n\r\n  render() {\r\n    const isTouchDevice = this.state.width <= 768;\r\n\r\n    if (isTouchDevice) {\r\n      return (\r\n        <div onKeyUp={(e) => this.handleSpace(e)} tabIndex=\"0\" id=\"timer-container\">\r\n\r\n          {/* Passing refresh as prop to Scrambler for scramble sequence to refresh when timer stops. */}\r\n          <Scrambler refresh={this.state.refresh} toggleType={() => this.toggleType()} />\r\n\r\n          {this.state.manualInput ? \r\n            <>\r\n              <form onSubmit={(e) => this.handleInputSubmit(e)}>\r\n                <input id=\"manual-input\" type=\"text\" value={this.state.time} onChange={(e) => this.handleInputChange(e)} />\r\n              </form>\r\n            </>\r\n            :\r\n            <ReactTouchEvents onTap={this.handleHold}>\r\n              <p id=\"timer-text\"> {this.state.time} </p>\r\n            </ReactTouchEvents>\r\n          }\r\n\r\n          {/* Passing record & clear record to statistics for processing */}\r\n          <Stats record={this.state.record} clearRecord={this.clearRecord} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div onKeyUp={(e) => this.handleSpace(e)} tabIndex=\"0\" id=\"timer-container\">\r\n          {/* Passing refresh as prop to Scrambler for scramble sequence to refresh when timer stops. */}\r\n          <Row>\r\n            <Scrambler refresh={this.state.refresh} toggleType={() => this.toggleType()} />\r\n          </Row>\r\n          {this.state.manualInput ? \"\" :\r\n            <p id=\"timer-text\"> {this.state.time} </p>\r\n          }\r\n\r\n          {/* Passing record & clear record to statistics for processing */}\r\n          <Stats record={this.state.record} clearRecord={this.clearRecord} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\nimport Timer from './Components/Timer/Timer.js';\r\nimport { Row } from \"react-bootstrap\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <div id=\"simplict\">\r\n      <Row>\r\n        <Timer />\r\n      </Row>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}